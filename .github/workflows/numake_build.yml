# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build using numake

on:
    push:
        branches:
            - 'master'
        paths:
            - '**.c'
            - '**.cpp'
            - '**.h'

    workflow_dispatch:

env:
    # Path to the solution file relative to the root of the project.
    SOLUTION_FILE_PATH: plugin.sln

    # Configuration type to build.
    # You can convert this to a build matrix if you need coverage of multiple configuration types.
    # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    BUILD_CONFIGURATION: Release
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
    contents: read

jobs:
    build:
        runs-on: windows-latest

        steps:
            - uses: actions/checkout@v4

            - name: Add MSBuild to PATH
              uses: microsoft/setup-msbuild@v2

            - name: Download numake
              run: gh release download indev -R juicermv/numake -p '*.exe' --dir "${{runner.temp}}"

            - name: Build using numake
              working-directory: ${{github.workspace}}
              run: ."${{runner.temp}}/numake.exe" build * -w ${{github.workspace}}

            - name: Package build output as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{github.sha}}
                  path: ${{github.workspace}}

    release:
        runs-on: self-hosted
        needs: build
        permissions:
            contents: write

        steps:
            - name: Download artifact
              id: artifact
              uses: actions/download-artifact@v4
              with:
                  merge-multiple: true

            - name: Archive artifact
              working-directory: ${{steps.artifact.outputs.download-path}}
              run: zip -9 -Zb -r ${{github.workspace}}/release.zip .

            - name: Create release
              env:
                  GH_TOKEN: ${{ github.token }}
              run: |
                  gh release create "$(git rev-parse --short HEAD)-$(date +%s)" --generate-notes
                  gh release upload "$(git rev-parse --short HEAD)-$(date +%s)" ${{github.workspace}}/release.zip
