# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: plugin.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Set GitHub PLUGIN_SDK_DIR
      run: echo "PLUGIN_SDK_DIR=${{github.workspace}}" | Out-File -FilePath $env:GITHUB_ENV
      
    - name: Generate PluginSDK for vs2022
      run: tools/premake/premake5.exe vs2022 --file="tools/premake/premake5.lua"

    - name: Build
      working-directory: ${{github.workspace}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Package build output as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{github.sha}}
        path: ${{github.workspace}}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        id: artifact
        uses: actions/download-artifact@v4

      - name: Create release
        id: release
        uses: actions/create-release@v1
        with:
          tag_name: ${{github.run_id}}
          release_name: ${{github.sha}}
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Upload release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{steps.release.outputs.upload_url}}
          asset_path: ${{github.sha}}.zip
          asset_name: build.zip
          asset_content_type: application/zip
      
